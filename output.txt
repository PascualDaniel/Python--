#source "input.txt"
	' * RecordType{integer,character,} pair ( offset 0)
	' * ArrayType{type=RecordType{employees,}, dimension=2} acme ( offset 3)
	' * ArrayType{type=ArrayType{type=IntType, dimension=3}, dimension=8} fibonacci ( offset 11)
	Call main	
	halt	
p:	
	' * Parameters
	' * Local Variables
	enter	0
	ret	0,0,0
f:	
	' * Parameters
	' * DoubleType r ( offset 6)
	' * IntType e ( offset 4)
	' * Local Variables
	' * DoubleType real ( offset -4)
	' * CharType c ( offset -5)
	' * IntType result ( offset -7)
	enter	7
#line 20
	' * Assigment
	push	bp
	pushi	-4
	addi	
	push	bp
	pushi	6
	addi	
	loadf
	pushf	10.0
	mulf	
	storef
#line 21
	' * Assigment
	push	bp
	pushi	-5
	addi	
	pushb	48
	storeb
#line 22
	' * If
	push	bp
	pushi	4
	addi	
	loadi
	pushi	256
	lti	
	jz Label_1	
	' * Assigment
	push	bp
	pushi	-5
	addi	
	push	bp
	pushi	4
	addi	
	loadi
	i2b	
	storeb
	' * Assigment
	push	bp
	pushi	-7
	addi	
	push	bp
	pushi	-5
	addi	
	loadb
	b2i	
	storei
	jmp Label_2	
	Label_1:	
	' * Assigment
	push	bp
	pushi	-7
	addi	
	push	bp
	pushi	-4
	addi	
	loadf
	f2i	
	storei
	Label_2:	
#line 28
	' * return
	push	bp
	pushi	-7
	addi	
	loadi
	ret	2,7,6
initialize:	
	' * Parameters
	' * Local Variables
	' * IntType i ( offset -2)
	enter	2
#line 33
	' * Assigment
	pusha	11
	pushi	0
	pushi	6
	muli	
	addi	
	pushi	0
	pushi	2
	muli	
	addi	
	pushi	0
	storei
#line 34
	' * Assigment
	pusha	11
	pushi	0
	pushi	6
	muli	
	addi	
	pushi	1
	pushi	2
	muli	
	addi	
	pushi	1
	storei
#line 35
	' * Assigment
	pusha	11
	pushi	0
	pushi	6
	muli	
	addi	
	pushi	2
	pushi	2
	muli	
	addi	
	pushi	1
	storei
#line 36
	' * Assigment
	push	bp
	pushi	-2
	addi	
	pushi	1
	storei
#line 37
	' * While
	Label_3:	
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	8
	lti	
	jz Label_4	
	' * Assigment
	pusha	11
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	6
	muli	
	addi	
	pushi	0
	pushi	2
	muli	
	addi	
	pusha	11
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	1
	subi	
	pushi	6
	muli	
	addi	
	pushi	1
	pushi	2
	muli	
	addi	
	loadi
	storei
	' * Assigment
	pusha	11
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	6
	muli	
	addi	
	pushi	1
	pushi	2
	muli	
	addi	
	pusha	11
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	1
	subi	
	pushi	6
	muli	
	addi	
	pushi	2
	pushi	2
	muli	
	addi	
	loadi
	storei
	' * Assigment
	pusha	11
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	6
	muli	
	addi	
	pushi	2
	pushi	2
	muli	
	addi	
	pusha	11
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	6
	muli	
	addi	
	pushi	0
	pushi	2
	muli	
	addi	
	loadi
	pusha	11
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	6
	muli	
	addi	
	pushi	1
	pushi	2
	muli	
	addi	
	loadi
	addi	
	storei
	' * Assigment
	push	bp
	pushi	-2
	addi	
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	1
	addi	
	storei
	jmp Label_3	
	Label_4:	
	ret	0,2,0
main:	
	' * Parameters
	' * Local Variables
	' * IntType j ( offset -2)
	' * IntType i ( offset -4)
	enter	4
#line 49
	' * Procediment
	call	p
#line 50
	' * Assigment
	push	bp
	pushi	-4
	addi	
	pushi	0
	storei
#line 51
	' * Assigment
	pusha	0
	pushi	2
	addi	
	pushb	48
	storeb
#line 52
	' * Assigment
	pusha	0
	pushi	0
	addi	
	pushb	48
	b2i	
	storei
#line 55
	' * Print
	push	bp
	pushi	-4
	addi	
	loadi
	i2f	
	pusha	0
	pushi	2
	addi	
	loadb
	b2i	
	call	f
	outi
	pushb	10
	outb
#line 56
	' * Procediment
	pushf	1.3
	pushi	2
	call	f
	popi	
#line 58
	' * Procediment
	call	initialize
#line 59
	' * Assigment
	push	bp
	pushi	-4
	addi	
	pushi	0
	storei
#line 60
	' * While
	Label_5:	
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	8
	lti	
	jz Label_6	
	' * Print
	pushb	40
	outb
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	1
	addi	
	outi
	pushb	41
	outb
	pusha	11
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	6
	muli	
	addi	
	pushi	0
	pushi	2
	muli	
	addi	
	loadi
	outi
	pushb	43
	outb
	pusha	11
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	6
	muli	
	addi	
	pushi	1
	pushi	2
	muli	
	addi	
	loadi
	outi
	pushb	61
	outb
	pusha	11
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	6
	muli	
	addi	
	pushi	2
	pushi	2
	muli	
	addi	
	loadi
	outi
	pushb	10
	outb
	' * Assigment
	push	bp
	pushi	-4
	addi	
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	1
	addi	
	storei
	jmp Label_5	
	Label_6:	
#line 68
	' * Assigment
	pusha	3
	pushi	1
	pushi	4
	muli	
	addi	
	pushi	0
	addi	
	pushi	1
	pushi	2
	muli	
	addi	
	pushi	0
	addi	
	pushi	56
	storei
#line 70
	' * Print
	pusha	3
	pushi	1
	pushi	4
	muli	
	addi	
	pushi	0
	addi	
	pushi	1
	pushi	2
	muli	
	addi	
	pushi	0
	addi	
	loadi
	outi
	pushb	10
	outb
#line 71
	' * Assigment
	push	bp
	pushi	-4
	addi	
	pushi	0
	storei
#line 72
	' * While
	Label_7:	
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	2
	lti	
	jz Label_8	
	' * Assigment
	push	bp
	pushi	-2
	addi	
	pushi	0
	storei
	' * While
	Label_9:	
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	2
	lti	
	jz Label_10	
	' * Assigment
	pusha	3
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	4
	muli	
	addi	
	pushi	0
	addi	
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	2
	muli	
	addi	
	pushi	0
	addi	
	push	bp
	pushi	-4
	addi	
	loadi
	push	bp
	pushi	-2
	addi	
	loadi
	addi	
	storei
	' * Assigment
	push	bp
	pushi	-2
	addi	
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	1
	addi	
	storei
	jmp Label_9	
	Label_10:	
	' * Assigment
	push	bp
	pushi	-4
	addi	
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	1
	addi	
	storei
	jmp Label_7	
	Label_8:	
#line 81
	' * Assigment
	push	bp
	pushi	-4
	addi	
	pushi	0
	storei
#line 82
	' * While
	Label_11:	
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	2
	lti	
	jz Label_12	
	' * Assigment
	push	bp
	pushi	-2
	addi	
	pushi	0
	storei
	' * While
	Label_13:	
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	2
	lti	
	jz Label_14	
	' * Print
	pusha	3
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	4
	muli	
	addi	
	pushi	0
	addi	
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	2
	muli	
	addi	
	pushi	0
	addi	
	loadi
	outi
	pushb	32
	outb
	' * Assigment
	push	bp
	pushi	-2
	addi	
	push	bp
	pushi	-2
	addi	
	loadi
	pushi	1
	addi	
	storei
	jmp Label_13	
	Label_14:	
	' * Assigment
	push	bp
	pushi	-4
	addi	
	push	bp
	pushi	-4
	addi	
	loadi
	pushi	1
	addi	
	storei
	jmp Label_11	
	Label_12:	
	ret	0,4,0
